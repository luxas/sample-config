// +build !ignore_autogenerated

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	config "github.com/luxas/sample-config/pkg/apis/config"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	configv1alpha1 "k8s.io/component-base/config/v1alpha1"
	v1alpha1 "k8s.io/component-base/config/v1alpha1"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*MyAppConfiguration)(nil), (*config.MyAppConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MyAppConfiguration_To_config_MyAppConfiguration(a.(*MyAppConfiguration), b.(*config.MyAppConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.MyAppConfiguration)(nil), (*MyAppConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_MyAppConfiguration_To_v1_MyAppConfiguration(a.(*config.MyAppConfiguration), b.(*MyAppConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ServerConfiguration)(nil), (*config.ServerConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ServerConfiguration_To_config_ServerConfiguration(a.(*ServerConfiguration), b.(*config.ServerConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.ServerConfiguration)(nil), (*ServerConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_ServerConfiguration_To_v1_ServerConfiguration(a.(*config.ServerConfiguration), b.(*ServerConfiguration), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_MyAppConfiguration_To_config_MyAppConfiguration(in *MyAppConfiguration, out *config.MyAppConfiguration, s conversion.Scope) error {
	if err := v1alpha1.Convert_v1alpha1_ClientConnectionConfiguration_To_config_ClientConnectionConfiguration(&in.ClientConnection, &out.ClientConnection, s); err != nil {
		return err
	}
	if err := configv1alpha1.Convert_v1alpha1_LeaderElectionConfiguration_To_config_LeaderElectionConfiguration(&in.LeaderElection, &out.LeaderElection, s); err != nil {
		return err
	}
	if err := Convert_v1_ServerConfiguration_To_config_ServerConfiguration(&in.Server, &out.Server, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_MyAppConfiguration_To_config_MyAppConfiguration is an autogenerated conversion function.
func Convert_v1_MyAppConfiguration_To_config_MyAppConfiguration(in *MyAppConfiguration, out *config.MyAppConfiguration, s conversion.Scope) error {
	return autoConvert_v1_MyAppConfiguration_To_config_MyAppConfiguration(in, out, s)
}

func autoConvert_config_MyAppConfiguration_To_v1_MyAppConfiguration(in *config.MyAppConfiguration, out *MyAppConfiguration, s conversion.Scope) error {
	if err := v1alpha1.Convert_config_ClientConnectionConfiguration_To_v1alpha1_ClientConnectionConfiguration(&in.ClientConnection, &out.ClientConnection, s); err != nil {
		return err
	}
	if err := configv1alpha1.Convert_config_LeaderElectionConfiguration_To_v1alpha1_LeaderElectionConfiguration(&in.LeaderElection, &out.LeaderElection, s); err != nil {
		return err
	}
	if err := Convert_config_ServerConfiguration_To_v1_ServerConfiguration(&in.Server, &out.Server, s); err != nil {
		return err
	}
	return nil
}

// Convert_config_MyAppConfiguration_To_v1_MyAppConfiguration is an autogenerated conversion function.
func Convert_config_MyAppConfiguration_To_v1_MyAppConfiguration(in *config.MyAppConfiguration, out *MyAppConfiguration, s conversion.Scope) error {
	return autoConvert_config_MyAppConfiguration_To_v1_MyAppConfiguration(in, out, s)
}

func autoConvert_v1_ServerConfiguration_To_config_ServerConfiguration(in *ServerConfiguration, out *config.ServerConfiguration, s conversion.Scope) error {
	out.Address = in.Address
	out.Port = in.Port
	out.TLSCertFile = in.TLSCertFile
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	return nil
}

// Convert_v1_ServerConfiguration_To_config_ServerConfiguration is an autogenerated conversion function.
func Convert_v1_ServerConfiguration_To_config_ServerConfiguration(in *ServerConfiguration, out *config.ServerConfiguration, s conversion.Scope) error {
	return autoConvert_v1_ServerConfiguration_To_config_ServerConfiguration(in, out, s)
}

func autoConvert_config_ServerConfiguration_To_v1_ServerConfiguration(in *config.ServerConfiguration, out *ServerConfiguration, s conversion.Scope) error {
	out.Address = in.Address
	out.Port = in.Port
	out.TLSCertFile = in.TLSCertFile
	out.TLSPrivateKeyFile = in.TLSPrivateKeyFile
	return nil
}

// Convert_config_ServerConfiguration_To_v1_ServerConfiguration is an autogenerated conversion function.
func Convert_config_ServerConfiguration_To_v1_ServerConfiguration(in *config.ServerConfiguration, out *ServerConfiguration, s conversion.Scope) error {
	return autoConvert_config_ServerConfiguration_To_v1_ServerConfiguration(in, out, s)
}
